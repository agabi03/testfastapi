"""StudentsCreated

Revision ID: 6824b1167e6c
Revises: ed30a8f17cf4
Create Date: 2024-05-28 17:01:37.163992

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6824b1167e6c"
down_revision: Union[str, None] = "ed30a8f17cf4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "scores",
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            "value <= 5", name=op.f("ck_scores_check_value_max")
        ),
        sa.CheckConstraint(
            "value >= 1", name=op.f("ck_scores_check_value_min")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_scores")),
    )
    op.create_table(
        "students",
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("score_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["score_id"],
            ["scores.id"],
            name=op.f("fk_students_score_id_scores"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_students")),
    )
    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "username", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column("foo", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("bar", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_users"),
        sa.UniqueConstraint("foo", "bar", name="uq_users_foo_bar"),
        sa.UniqueConstraint("username", name="uq_users_username"),
    )
    op.drop_table("students")
    op.drop_table("scores")
    # ### end Alembic commands ###
